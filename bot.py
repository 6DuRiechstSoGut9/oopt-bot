import os
import logging
import threading
import telebot
from flask import Flask
from waitress import serve

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

app = Flask(__name__)
app.route('/')(lambda: "ü§ñ –ë–æ—Ç –û–û–ü–¢ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

TOKEN = os.getenv('TELEGRAM_TOKEN')
bot = telebot.TeleBot(TOKEN)

def analyze_documents():
    """–ê–Ω–∞–ª–∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    if not os.path.exists('documents'):
        return "üìÅ –î–æ–∫—É–º–µ–Ω—Ç—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
    
    file_count = 0
    categories = {}
    
    for root, dirs, files in os.walk('documents'):
        for file in files:
            file_count += 1
            ext = os.path.splitext(file)[1].lower()
            categories[ext] = categories.get(ext, 0) + 1
    
    info = f"üìö –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {file_count}\n"
    info += "üìä –§–æ—Ä–º–∞—Ç—ã —Ñ–∞–π–ª–æ–≤:\n"
    for ext, count in categories.items():
        info += f"‚Ä¢ {ext or '–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è'}: {count} —Ñ–∞–π–ª–æ–≤\n"
    
    return info

DOCUMENTS_INFO = analyze_documents()

def search_in_documents(query):
    """–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º"""
    query = query.lower()
    
    # –ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    responses = {
        '–≤—ã—Ç–µ–≥–æ—Ä—Å–∫–∏–π': """–í—ã—Ç–µ–≥–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω - –û–û–ü–¢:
‚Ä¢ –í–µ—Ä—Ö–Ω–µ-–ê–Ω–¥–æ–º—Å–∫–∏–π (4014 –≥–∞)
‚Ä¢ –ï–∂–æ–∑–µ—Ä—Å–∫–∏–π (3013 –≥–∞)  
‚Ä¢ –®–∏–º–æ–∑–µ—Ä—Å–∫–∏–π (8553 –≥–∞)
‚Ä¢ –ö—É—à—Ç–æ–∑–µ—Ä—Å–∫–∏–π (6364 –≥–∞)""",
        
        '–º–æ–¥–Ω–æ': """–ó–∞–∫–∞–∑–Ω–∏–∫ –ú–æ–¥–Ω–æ:
‚Ä¢ –ü–ª–æ—â–∞–¥—å: 994 –≥–∞
‚Ä¢ –£—Å—Ç—é–∂–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
‚Ä¢ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å""",
        
        '–∫—Ä—É–ø–Ω': """–ö—Ä—É–ø–Ω—ã–µ –û–û–ü–¢:
‚Ä¢ –®–∏–ª–µ–Ω–≥—Å–∫–∏–π (13610 –≥–∞)
‚Ä¢ –°–æ–Ω–¥—É–≥—Å–∫–∏–π (10387 –≥–∞)
‚Ä¢ –ë–∞–±—É—à–∫–∏–Ω—Å–∫–∏–π (24500 –≥–∞)""",
        
        '—Å–∫–æ–ª—å–∫–æ –æ–æ–ø—Ç': "–í –æ–±–ª–∞—Å—Ç–∏ >100 –û–û–ü–¢ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è",
        
        '–¥–æ–∫—É–º–µ–Ω—Ç': DOCUMENTS_INFO
    }
    
    for keyword, response in responses.items():
        if keyword in query:
            return response
    
    return f"""üîç –ü–æ –∑–∞–ø—Ä–æ—Å—É "{query}" –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ {DOCUMENTS_INFO.split()[2]} –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö

üí° –£—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å:
‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –û–û–ü–¢
‚Ä¢ –†–∞–π–æ–Ω —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è
‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏"""

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = f"""ü§ñ –ë–æ—Ç –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏

{DOCUMENTS_INFO}

üí° –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:
‚Ä¢ "–û–û–ü–¢ –í—ã—Ç–µ–≥–æ—Ä—Å–∫–æ–≥–æ —Ä–∞–π–æ–Ω–∞"  
‚Ä¢ "–ó–∞–∫–∞–∑–Ω–∏–∫ –ú–æ–¥–Ω–æ"
‚Ä¢ "–ö—Ä—É–ø–Ω—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏"
‚Ä¢ "–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –û–û–ü–¢"
"""
    bot.reply_to(message, welcome_text)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    answer = search_in_documents(message.text)
    bot.reply_to(message, answer)

def main():
    threading.Thread(target=bot.infinity_polling, daemon=True).start()
    serve(app, host='0.0.0.0', port=8000)

if __name__ == '__main__':
    main()