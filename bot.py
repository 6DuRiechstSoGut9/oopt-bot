import os
import logging
import threading
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
from flask import Flask
from waitress import serve

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Flask app –¥–ª—è health checks
app = Flask(__name__)

@app.route('/')
def health_check():
    return "ü§ñ –ë–æ—Ç –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route('/health')
def health():
    return "OK"

# Telegram –±–æ—Ç
class OOPTBot:
    def __init__(self):
        self.token = os.getenv('TELEGRAM_TOKEN')
        self.application = Application.builder().token(self.token).build()
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("help", self.help))
        self.application.add_handler(CommandHandler("search", self.search))
        self.application.add_handler(CommandHandler("report", self.report))
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        welcome_text = """
ü§ñ **–ë–æ—Ç –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏**

–Ø –ø–æ–º–æ–≥—É –≤–∞–º:
‚Ä¢ –ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –û–û–ü–¢
‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è—Ö  
‚Ä¢ –ü—Ä–∏–Ω—è—Ç—å –∂–∞–ª–æ–±—É –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö

üìã **–ö–æ–º–∞–Ω–¥—ã:**
/search - –ø–æ–∏—Å–∫ –ø–æ –û–û–ü–¢
/report - —Å–æ–æ–±—â–∏—Ç—å –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏
/help - –ø–æ–º–æ—â—å

–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ–± –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏!
        """
        await update.message.reply_text(welcome_text)
    
    async def help(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
üìñ **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:**

üîç **–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:**
‚Ä¢ –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ–± –û–û–ü–¢
‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ä–∞–π–æ–Ω, –ø–ª–æ—â–∞–¥—å
‚Ä¢ –°–ø—Ä–æ—Å–∏—Ç–µ –æ —Ä–µ–∂–∏–º–µ –æ—Ö—Ä–∞–Ω—ã

üìù **–ñ–∞–ª–æ–±—ã –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /report –¥–ª—è –ø–æ–¥–∞—á–∏ –∂–∞–ª–æ–±—ã
‚Ä¢ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ
‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ –µ—Å–ª–∏ –µ—Å—Ç—å

–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:
‚Ä¢ "–ö–∞–∫–∏–µ –û–û–ü–¢ –≤ –í—ã—Ç–µ–≥–æ—Ä—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ?"
‚Ä¢ "–†–∞—Å—Å–∫–∞–∂–∏ –æ –∑–∞–∫–∞–∑–Ω–∏–∫–µ –ú–æ–¥–Ω–æ" 
‚Ä¢ "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ?"
        """
        await update.message.reply_text(help_text)
    
    async def search(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search"""
        await update.message.reply_text(
            "üîç **–ü–æ–∏—Å–∫ –ø–æ –û–û–ü–¢**\n\n"
            "–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ–± –æ—Å–æ–±–æ –æ—Ö—Ä–∞–Ω—è–µ–º—ã—Ö –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è—Ö:\n"
            "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –û–û–ü–¢\n"
            "‚Ä¢ –†–∞–π–æ–Ω —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è\n" 
            "‚Ä¢ –ü–ª–æ—â–∞–¥—å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏\n"
            "‚Ä¢ –†–µ–∂–∏–º –æ—Ö—Ä–∞–Ω—ã"
        )
    
    async def report(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /report"""
        report_text = """
üìù **–ü–æ–¥–∞—á–∞ –∂–∞–ª–æ–±—ã –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏**

–û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ:
1. **–ú–µ—Å—Ç–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è** (–∫–∞–∫–∞—è –û–û–ü–¢, —Ä–∞–π–æ–Ω)
2. **–°—É—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏—è** (—á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ)
3. **–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è**
4. **–§–æ—Ç–æ/–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞** (–µ—Å–ª–∏ –µ—Å—Ç—å)

–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ—Ä–≥–∞–Ω—ã.
        """
        await update.message.reply_text(report_text)
    
    async def handle_message(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_question = update.message.text
        
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å DeepSeek –∏ –≤–∞—à–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
        answer = await self.generate_answer(user_question)
        
        await update.message.reply_text(answer)
    
    async def generate_answer(self, question: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å"""
        # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ - –ø–æ—Ç–æ–º –ø–æ–¥–∫–ª—é—á–∏–º DeepSeek
        return f"""
üîç **–í–∞—à –≤–æ–ø—Ä–æ—Å:** {question}

üìö **–û—Ç–≤–µ—Ç:** –Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤–ª—é –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å.

üí° *–†–µ–∂–∏–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω*
"""
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        self.application.run_polling()

def run_telegram_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    bot = OOPTBot()
    bot.run()

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    bot_thread = threading.Thread(target=run_telegram_bot)
    bot_thread.daemon = True
    bot_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
    print("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Render...")
    serve(app, host='0.0.0.0', port=8000)