import os
import logging
import threading
import telebot
import requests
from flask import Flask
from waitress import serve

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

# Flask app –¥–ª—è health checks
app = Flask(__name__)

@app.route('/')
def health_check():
    return "ü§ñ –ë–æ—Ç –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!"

@app.route('/health')
def health():
    return "OK"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
TOKEN = os.getenv('TELEGRAM_TOKEN')
DEEPSEEK_API_KEY = os.getenv('DEEPSEEK_API_KEY')
DEEPSEEK_API_URL = "https://api.deepseek.com/v1/chat/completions"

if not TOKEN:
    logger.error("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
else:
    bot = telebot.TeleBot(TOKEN)

def get_deepseek_answer(question: str) -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç DeepSeek API"""
    if not DEEPSEEK_API_KEY:
        return "‚ùå API –∫–ª—é—á DeepSeek –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    
    try:
        headers = {
            "Content-Type": "application/json",
            "Authorization": f"Bearer {DEEPSEEK_API_KEY}"
        }
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –û–û–ü–¢
        system_prompt = """
–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –æ—Å–æ–±–æ –æ—Ö—Ä–∞–Ω—è–µ–º—ã–º –ø—Ä–∏—Ä–æ–¥–Ω—ã–º —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è–º (–û–û–ü–¢) –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. 
–û—Ç–≤–µ—á–∞–π –¢–û–õ–¨–ö–û –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –æ–± –û–û–ü–¢.

–û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –û–û–ü–¢ –≤ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏:
- –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –∑–∞–∫–∞–∑–Ω–∏–∫–∏ (—Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ)
- –ü–∞–º—è—Ç–Ω–∏–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã
- –û—Ö—Ä–∞–Ω—è–µ–º—ã–µ –ø—Ä–∏—Ä–æ–¥–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã
- –¢—É—Ä–∏—Å—Ç—Å–∫–æ-—Ä–µ–∫—Ä–µ–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏

–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏, –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∂–∏—Å—å –æ—Ç–≤–µ—á–∞—Ç—å.
"""
        
        payload = {
            "model": "deepseek-chat",
            "messages": [
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": question}
            ],
            "temperature": 0.1,
            "max_tokens": 1000
        }
        
        response = requests.post(DEEPSEEK_API_URL, json=payload, headers=headers, timeout=30)
        response.raise_for_status()
        
        result = response.json()
        return result['choices'][0]['message']['content']
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ DeepSeek API: {e}")
        return f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = """
ü§ñ **–ë–æ—Ç –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏**

–Ø –ø–æ–º–æ–≥—É –≤–∞–º:
‚Ä¢ –ù–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –û–û–ü–¢
‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è—Ö  
‚Ä¢ –ü—Ä–∏–Ω—è—Ç—å –∂–∞–ª–æ–±—É –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö

üìã **–ö–æ–º–∞–Ω–¥—ã:**
/search - –ø–æ–∏—Å–∫ –ø–æ –û–û–ü–¢
/report - —Å–æ–æ–±—â–∏—Ç—å –æ –Ω–∞—Ä—É—à–µ–Ω–∏–∏
/help - –ø–æ–º–æ—â—å

üí° **–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–ö–∞–∫–∏–µ –û–û–ü–¢ –≤ –í—ã—Ç–µ–≥–æ—Ä—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ?"
‚Ä¢ "–†–∞—Å—Å–∫–∞–∂–∏ –æ –∑–∞–∫–∞–∑–Ω–∏–∫–µ –ú–æ–¥–Ω–æ"
‚Ä¢ "–ü–ª–æ—â–∞–¥—å –∫–∞–∫–∏—Ö –û–û–ü–¢ –±–æ–ª—å—à–µ 10000 –≥–∞?"

–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ–± –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏!
    """
    bot.reply_to(message, welcome_text)

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
üìñ **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:**

üîç **–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:**
‚Ä¢ –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ–± –û–û–ü–¢
‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ä–∞–π–æ–Ω, –ø–ª–æ—â–∞–¥—å
‚Ä¢ –°–ø—Ä–æ—Å–∏—Ç–µ –æ —Ä–µ–∂–∏–º–µ –æ—Ö—Ä–∞–Ω—ã

üìù **–ñ–∞–ª–æ–±—ã –æ –Ω–∞—Ä—É—à–µ–Ω–∏—è—Ö:**
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /report –¥–ª—è –ø–æ–¥–∞—á–∏ –∂–∞–ª–æ–±—ã
‚Ä¢ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ
‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Ñ–æ—Ç–æ –µ—Å–ª–∏ –µ—Å—Ç—å

üåç **–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–û–û–ü–¢ –ë–µ–ª–æ–∑–µ—Ä—Å–∫–æ–≥–æ —Ä–∞–π–æ–Ω–∞"
‚Ä¢ "–ó–∞–∫–∞–∑–Ω–∏–∫–∏ –ø–ª–æ—â–∞–¥—å—é –±–æ–ª–µ–µ 5000 –≥–∞" 
‚Ä¢ "–ü–∞–º—è—Ç–Ω–∏–∫–∏ –ø—Ä–∏—Ä–æ–¥—ã –≤ –£—Å—Ç—é–∂–µ–Ω—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ"
    """
    bot.reply_to(message, help_text)

@bot.message_handler(commands=['search'])
def search_command(message):
    bot.reply_to(message, "üîç **–†–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω**\n\n–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ–± –û–û–ü–¢ –í–æ–ª–æ–≥–æ–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏:")

@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    user_question = message.text
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±–æ—Ç –¥—É–º–∞–µ—Ç
    bot.send_chat_action(message.chat.id, 'typing')
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek
    answer = get_deepseek_answer(user_question)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    bot.reply_to(message, answer)

def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    if TOKEN:
        logger.info("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ —Å DeepSeek...")
        bot.infinity_polling()
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not TOKEN:
        logger.error("‚ùå TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    if not DEEPSEEK_API_KEY:
        logger.warning("‚ö†Ô∏è DEEPSEEK_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ")
    else:
        logger.info("‚úÖ DeepSeek API –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
    if TOKEN:
        bot_thread = threading.Thread(target=run_bot, daemon=True)
        bot_thread.start()
        logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    logger.info("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8000...")
    serve(app, host='0.0.0.0', port=8000)

if __name__ == '__main__':
    main()